{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Key Mapper Documentation \u00b6 Key Mapper is a free and open source Android app that can map single or multiple key events to a custom action. This wiki aims to provide users with a comprehensive guide to using and setting up Key Mapper for typical implementations. For specific help with more complicated key maps or if this wiki does not answer your questions, you can join the Key Mapper Discord support server and ask for help. Get help Support the project","title":"Home"},{"location":"#welcome-to-key-mapper-documentation","text":"Key Mapper is a free and open source Android app that can map single or multiple key events to a custom action. This wiki aims to provide users with a comprehensive guide to using and setting up Key Mapper for typical implementations. For specific help with more complicated key maps or if this wiki does not answer your questions, you can join the Key Mapper Discord support server and ask for help. Get help Support the project","title":"Welcome to  Key Mapper Documentation"},{"location":"contributing/","text":"Consistency Standards \u00b6 Writing \u00b6 It is important to use consistent language within the app's code and documentation. Make sure that your submissions comply with these standards. If you have noticed inconsistencies you can alert the developer with an issue or in the Discord . These standards don't need to be followed in places other than the documentation and source code. Follow this Material Design guide . Case \u00b6 No title case unless it is the title of a webpage, section heading. No title case in the string resources in the source code at all. Here are words and phrases that can be spelt or capitalised in multiple ways. Terminology Correct \ud83d\ude0d Incorrect \ud83d\udc7f The app's name. Key Mapper Use Keyboard/Button Mapper when advertising the app as this is how it appears in the app stores. You can use \"Key Mapper\" in the rest of the advert since this is much shorter. key mapper, keymapper A key map key map . In variable and class names it should be keymap, fooKeymap instead of fooKeyMap. The class KeyMap is an exception. keymap, Key Map. key-map. Key-Map. A trigger trigger Trigger An action action Action A constraint constraint Constraint A key event key event Key Event, keyevent A key code key code . In variable and class names it should be keycode instead of keyCode. keycode, Key Code A home screen home screen homescreen, Home Screen A backup/ to back up Noun: backup . Verb; back up Backup when using the verb. Documentation \u00b6 Headings \u00b6 If a heading is for a particular feature then it should include the minimum supported Key Mapper version except version 2.0. because 1. isn't supported at all and whether it requires root. E.g \"Trigger When Screen is Off (ROOT, 2.1.0+)\" Committing \u00b6 Versioning \u00b6 Code \u00b6 Follow Google's Kotlin style guide. https://developer.android.com/kotlin/style-guide","title":"Contributing"},{"location":"contributing/#consistency-standards","text":"","title":"Consistency Standards"},{"location":"contributing/#writing","text":"It is important to use consistent language within the app's code and documentation. Make sure that your submissions comply with these standards. If you have noticed inconsistencies you can alert the developer with an issue or in the Discord . These standards don't need to be followed in places other than the documentation and source code. Follow this Material Design guide .","title":"Writing"},{"location":"contributing/#case","text":"No title case unless it is the title of a webpage, section heading. No title case in the string resources in the source code at all. Here are words and phrases that can be spelt or capitalised in multiple ways. Terminology Correct \ud83d\ude0d Incorrect \ud83d\udc7f The app's name. Key Mapper Use Keyboard/Button Mapper when advertising the app as this is how it appears in the app stores. You can use \"Key Mapper\" in the rest of the advert since this is much shorter. key mapper, keymapper A key map key map . In variable and class names it should be keymap, fooKeymap instead of fooKeyMap. The class KeyMap is an exception. keymap, Key Map. key-map. Key-Map. A trigger trigger Trigger An action action Action A constraint constraint Constraint A key event key event Key Event, keyevent A key code key code . In variable and class names it should be keycode instead of keyCode. keycode, Key Code A home screen home screen homescreen, Home Screen A backup/ to back up Noun: backup . Verb; back up Backup when using the verb.","title":"Case"},{"location":"contributing/#documentation","text":"","title":"Documentation"},{"location":"contributing/#headings","text":"If a heading is for a particular feature then it should include the minimum supported Key Mapper version except version 2.0. because 1. isn't supported at all and whether it requires root. E.g \"Trigger When Screen is Off (ROOT, 2.1.0+)\"","title":"Headings"},{"location":"contributing/#committing","text":"","title":"Committing"},{"location":"contributing/#versioning","text":"","title":"Versioning"},{"location":"contributing/#code","text":"Follow Google's Kotlin style guide. https://developer.android.com/kotlin/style-guide","title":"Code"},{"location":"faq/","text":"This page serves to answer frequently asked questions about Key Mapper, and help solve any problems you may be facing. See the Quick Start Guide for more general help with using Key Mapper. \"My Keyboard doesn't appear when using the app.\" \u00b6 Key Mapper Basic Input Method (the keyboard built-in to the app) has no GUI/buttons. You can install the Key Mapper GUI Keyboard to get a proper keyboard that can also perform Key Mapper actions. \"Why don't my volume buttons work when I press them?\" \u00b6 Give the app Do Not Disturb access in your device settings. At the top of the homescreen in the Key Mapper app there is a \"Fix\" button to do this. \"Why aren't my key maps being triggered?\" \u00b6 Disable all battery and memory optimisation features on your device. Consult https://dontkillmyapp.com for how to do this on your device. Restart/reboot your device. This works in most cases. Make sure your key maps are enabled. You can check in your notification tray, and unpause them by tapping the notification if necessary. Restart the accessibility service by turning it off and on again. If none of these steps solve your problem, or the problem keeps coming back, report an issue or ask for help in the Discord server . \"Why aren't the buttons on my Bluetooth device detected?\" \u00b6 Many Bluetooth devices (like headphones) aren't supported by Key Mapper out of the box. Bluetooth keyboards work most of the time. If you are willing and able to do some simple debugging, perhaps by installing utility apps or using ADB, join the Discord server and we will try our best to get it working for you. \"Why doesn't the app open in Dex mode?\" \u00b6 Samsung Dex doesn't allow apps with a 3rd party keyboard to open while in Dex mode. You can still configure key maps while out of Dex mode and your key maps which don't require a Key Mapper keyboard will still work in Dex mode. \"Why doesn't the app uninstall?\" \u00b6 You have probably enabled the app's device administrator in your device's settings. To uninstall the app, you must turn it off. The location of the device admin settings page varies on devices but on skins close to stock-Android it is under \"Security\" -> \"Device admin apps\". If you need help, ask in the Discord server. \"Why aren\u2019t the Keycode, Key or Text actions working?\" \u00b6 The Key Mapper keyboard must be enabled in your device settings and chosen as the active keyboard. See Quick Start Guide for help. Why can't I remap some of my Joy Con buttons? \u00b6 Not all the Joy Con buttons are visible to accessibility services. There isn't anything the developer can do. We tested the app on SwitchRoot Android and this is what works... Working: \u00b6 ZL (Button L2) L (Button L1) - (Select) + (Start) Left analog stick button (unknown keycode 0) ZR (Button R2) R (Button R1) X (Button X) Y (Button Y) B (Button B) A (Button A) Home (Home) Volume up (Vol up) Volume down (Vol down) Not working: \u00b6 Screenshot button All D-Pad buttons (used by OS) Both analog sticks (used by OS) Right analog stick button SR and SL (left joycon) SR and SL (right joycon) Power button","title":"FAQ"},{"location":"faq/#my-keyboard-doesnt-appear-when-using-the-app","text":"Key Mapper Basic Input Method (the keyboard built-in to the app) has no GUI/buttons. You can install the Key Mapper GUI Keyboard to get a proper keyboard that can also perform Key Mapper actions.","title":"\"My Keyboard doesn't appear when using the app.\""},{"location":"faq/#why-dont-my-volume-buttons-work-when-i-press-them","text":"Give the app Do Not Disturb access in your device settings. At the top of the homescreen in the Key Mapper app there is a \"Fix\" button to do this.","title":"\"Why don't my volume buttons work when I press them?\""},{"location":"faq/#why-arent-my-key-maps-being-triggered","text":"Disable all battery and memory optimisation features on your device. Consult https://dontkillmyapp.com for how to do this on your device. Restart/reboot your device. This works in most cases. Make sure your key maps are enabled. You can check in your notification tray, and unpause them by tapping the notification if necessary. Restart the accessibility service by turning it off and on again. If none of these steps solve your problem, or the problem keeps coming back, report an issue or ask for help in the Discord server .","title":"\"Why aren't my key maps being triggered?\""},{"location":"faq/#why-arent-the-buttons-on-my-bluetooth-device-detected","text":"Many Bluetooth devices (like headphones) aren't supported by Key Mapper out of the box. Bluetooth keyboards work most of the time. If you are willing and able to do some simple debugging, perhaps by installing utility apps or using ADB, join the Discord server and we will try our best to get it working for you.","title":"\"Why aren't the buttons on my Bluetooth device detected?\""},{"location":"faq/#why-doesnt-the-app-open-in-dex-mode","text":"Samsung Dex doesn't allow apps with a 3rd party keyboard to open while in Dex mode. You can still configure key maps while out of Dex mode and your key maps which don't require a Key Mapper keyboard will still work in Dex mode.","title":"\"Why doesn't the app open in Dex mode?\""},{"location":"faq/#why-doesnt-the-app-uninstall","text":"You have probably enabled the app's device administrator in your device's settings. To uninstall the app, you must turn it off. The location of the device admin settings page varies on devices but on skins close to stock-Android it is under \"Security\" -> \"Device admin apps\". If you need help, ask in the Discord server.","title":"\"Why doesn't the app uninstall?\""},{"location":"faq/#why-arent-the-keycode-key-or-text-actions-working","text":"The Key Mapper keyboard must be enabled in your device settings and chosen as the active keyboard. See Quick Start Guide for help.","title":"\"Why aren\u2019t the Keycode, Key or Text actions working?\""},{"location":"faq/#why-cant-i-remap-some-of-my-joy-con-buttons","text":"Not all the Joy Con buttons are visible to accessibility services. There isn't anything the developer can do. We tested the app on SwitchRoot Android and this is what works...","title":"Why can't I remap some of my Joy Con buttons?"},{"location":"faq/#working","text":"ZL (Button L2) L (Button L1) - (Select) + (Start) Left analog stick button (unknown keycode 0) ZR (Button R2) R (Button R1) X (Button X) Y (Button Y) B (Button B) A (Button A) Home (Home) Volume up (Vol up) Volume down (Vol down)","title":"Working:"},{"location":"faq/#not-working","text":"Screenshot button All D-Pad buttons (used by OS) Both analog sticks (used by OS) Right analog stick button SR and SL (left joycon) SR and SL (right joycon) Power button","title":"Not working:"},{"location":"known-issues/","text":"Volume increases to max/minimum when pressing power and the respective volume button when the device is off \u00b6 This seems to be a bug with accessibility services on Android Pie+ on some devices. It also happens with the Macrodroid app when you only enable their accessibility service which filters key events. I tested Key Mapper with no code in the onKeyEvent function in the accessibility service and it still happens. These are the devices that I've tested. image/svg+xml Rooted OxygenOS Android 10 OnePlus 6T image/svg+xml Rooted stock Android 9 Pie custom ROM on the OnePlus 6T image/svg+xml \u200bNon-rooted OxygenOS Android 10 OnePlus 7 Pro image/svg+xml Android 10 on the Pixel 2","title":"Known Issues"},{"location":"known-issues/#volume-increases-to-maxminimum-when-pressing-power-and-the-respective-volume-button-when-the-device-is-off","text":"This seems to be a bug with accessibility services on Android Pie+ on some devices. It also happens with the Macrodroid app when you only enable their accessibility service which filters key events. I tested Key Mapper with no code in the onKeyEvent function in the accessibility service and it still happens. These are the devices that I've tested. image/svg+xml Rooted OxygenOS Android 10 OnePlus 6T image/svg+xml Rooted stock Android 9 Pie custom ROM on the OnePlus 6T image/svg+xml \u200bNon-rooted OxygenOS Android 10 OnePlus 7 Pro image/svg+xml Android 10 on the Pixel 2","title":"Volume increases to max/minimum when pressing power and the respective volume button when the device is off"},{"location":"quick-start/","text":"This page aims to give users an introduction to the Key Mapper interface and a demonstration on how to perform typical tasks with the app. For specific troubleshooting, consult the FAQ. Where screenshots are necessary, this guide uses two devices to demonstrate. OnePlus 7 Pro, Android 10, Dark theme, 1440p, tiny font size Samsung J3 6, Android 5, Light theme, 720p, medium font size App interface pictured: keymapper-2.3.0-alpha-ci.778 This guide is updated to match current stable release UI. Report inaccuracies. First time setup \u00b6 When you open Key Mapper, you will be presented with this screen. This screen is referred to as the Key Mapper home screen. Tapping the FIX button next to the accessibility service prompt will allow you to grant Key Mapper permission to run its accessibility service. You must do this for the app to work at all. You can then tap Key Mapper in your list of available services. There may be many others on this screen and your interface may be slightly different. If nothing happens when you tap FIX, or if you can't enable the service, see this page or ask for help in the Discord server. Tapping the FIX button next to the input method prompt will allow you to enable a Key Mapper compatible keyboard. If you want to perform actions like pressing keyboard keys or entering text you must enable this. If you have only installed the Key Mapper app, your list of available keyboards will contain \"Key Mapper Basic Input Method\" only. If you aim to use a physical keyboard (not on-screen) when using Key Mapper, this will be suitable for you. If you want an on-screen keyboard to be available while using Key Mapper, you need to install \"Key Mapper GUI Keyboard\". It is available on the Google Play Store , F-Droid and GitHub. If you are using a Huawei or Xiaomi branded device, a device with 2GB of RAM or less, or intend to use the app while playing a mobile game, it is especially important to follow the next step. Tapping the FIX button next to the battery optimisation prompt will allow you to turn off features of your device that may prevent Key Mapper's essential services from running in the background. This is usually the source of the common 'Key Mapper randomly stops working' issue. Older devices (such as my Android 5 device pictured here) do not have this prompt in Key Mapper. However, I was still able to find the setting in my device settings app. Read more below for details. The screen that opens after tapping FIX may vary depending on your device. In my case, to disable optimisation I found the app(s) in the list, tapped them to open their settings, and chose 'Don't optimise' and on the second device, 'Disabled'. There is an excellent guide at dontkillmyapp.com that explains how to disable battery and/or memory optimisation for your specific device. If Key Mapper randomly stops working even after you complete these steps, ask for help in the Discord server. If you want to remap volume buttons and use them when Do Not Disturb is enabled, you should grant Key Mapper permission to do so. If you have an older device, you may not have this as an option. Tapping FIX will allow you to grant the permission. Find Key Mapper in the list and tap it in order to choose 'Allowed'. Most people can ignore the final prompt. If you want to create an action to change input method, you need to grant an additional set of permissions called WRITE_SECURE_SETTINGS. For help with this click here. Creating a key map \u00b6 A key map is an association between a user input (such as pushing a key or button) and a response from the device (sending information about what key was pressed and for how long). In Key Mapper, 'user inputs' that are recognised by the app are called 'triggers'. The responses from your device that were due to a trigger being pressed are called 'actions'. Key Mapper lets you assign actions to triggers that may be different from their default use. A 'volume up' trigger normally increases the volume when pressed, but this app can change that to something else. This guide deals with 'Key event' triggers. If you want to remap fingerprint gestures, check out this guide. Setting the trigger(s) \u00b6 To create your first key map, tap the + icon at the bottom of the Key Mapper home screen. You will see one of the two menus below. In either case, the first step is to record a trigger. Tap the red 'Record trigger' button and then press the physical button that you want to change the function of. In this guide I will demonstrate with 'volume down'. Key Mapper can also create a key map with multiple triggers. If you want to use more than one trigger for one key map, you can press the buttons in the order you will press them to execute the key map. For example, if you wanted to map 'Ctrl' + 'H' to show the device home menu, you should press 'Ctrl' and then 'H'. Key Mapper can also remap fingerprint gestures on many devices. You can learn how to do this here. Setting the action(s) \u00b6 Next, it's time to choose an action. If you have a high-resolution display, you will see the ADD ACTION button at the bottom of the screen (pictured left). Otherwise, tap the ACTIONS tab at the top of the screen (pictured right). Tap the ADD ACTION button at the bottom of this screen. The action selection screen will open. Here you can choose from a wide variety of actions. Swipe left and right to change category, and scroll up and down the list until you find the action you want to add. Below is a table of the different kinds of actions you can choose from in each tab. Tab Description App Choose an app to open when you press your trigger. App shortcut Choose an app operation (such as sharing location, checking local traffic, sending a text message) Keycode Emulate a keyboard key press (such as an alphanumeric character or multimedia key) System Choose a system operation (such as toggling Bluetooth, opening the home menu, toggling flashlight) Key An alternative way to choose a key press action, by pressing the key that you want to map to. Tap screen Emulate a screen tap at a specific location on your screen. Key event Emulate a key press from a specifc connected device. Text Emulate typing a string. Intent See this page. Phone call Call a telephone number. Network and carrier rates will apply. Unsupported actions A list of actions that your device won't allow you to use. Android frequently changes what users are allowed to do between versions. For this simple demonstration I will choose KEYCODE_E from the Keycode tab. This action will emulate pressing an E key on a keyboard. Key Mapper can also create a key map with multiple actions. If you want to add more actions to execute in series you can do so by tapping ADD ACTION again and choosing the next action in the chain. In the next section you can specify a delay between those actions if you wish. Customising a key map \u00b6 You may wish to customise your triggers and actions to have specific behaviours. Most people will want to do at least some customisation. Trigger settings \u00b6 Starting with the triggers, tap the 3 dot menu to the right of the trigger's name to bring up the following menu. You can choose from four different settings. Turning on \"Do not override default action\" will mean that Key Mapper will not replace the normal operation of your trigger, instead it will execute the key map as well as the default operation. One trigger can have three different click types. Choose from short press, long press and double press. Read more. Action settings \u00b6 Next, tap the 3 stacked dots to the right of the action's name to bring up the following menu. Here you can customise a lot of the operation of your key map, including timing, multipliers and debug messages. Show a toast message when performing When this is turned on, the following notice will come up at the bottom of the screen when ever your trigger is pressed. You can have your device vibrate instead of an on-screen message if you want. The setting is found here. The following details refer to action timing settings. Delay before next action (ms) This option takes effect if you have multiple actions in your key map. The slider sets the amount of time between this action and the next. Action count This option serves as a multiplier. If action count is equal to 1, when your key map is triggered, your action will be performed once. If it is equal to 5, the action will be performed 5 times, etc. Repeating actions \u00b6 Repeat When this is turned on, Key Mapper will execute your actions repeatedly. This is particularly useful when emulating a keyboard key press, where in most applications holding down the key would result in a repeating output. The default settings in Key Mapper are designed to emulate that behaviour when 'Repeat' is turned on. Repeat every... (ms) This option sets the time period for your repeating action. If this is set to 200, your action will repeat every 200ms, or in terms of frequency, 5 times per second. Some people prefer to think about this setting as a repeat rate, commonly measured in 'clicks' per second or cps. To calculate the appropriate time period for this option from a desired frequency, use this equation: Time period (ms) = 1000 / Frequency ('cps') Delay until repeat... (ms) This option sets the amount of time between the first action and the second action (or the first repeat). This is part of the keyboard key behaviour simulation. If you want your repeating action to begin straight away, you can make this 0. Stop repeating when trigger is... Released Pressed again This option allows you to choose from 2 simple behaviours. If you choose 'Released', you will need to hold down the trigger key(s) in order to have the key map execute. If you let go of the key(s), the key map will stop. If you choose 'Pressed again', pressing your trigger key(s) once will be sufficient to start your repeating key map. To stop the key map, you will need to press the trigger key(s) a second time. Hold down actions \u00b6 Hold down This setting provides the ability to simulate holding down a key. With this turned on (and repeat turned off), the default behaviour is that holding down your trigger will translate to holding down the action, for as long as you hold down the trigger. Hold down until trigger is... Released Pressed again This setting allows you to choose from two behaviours. If 'Released' is selected, holding down your trigger key(s) will translate to holding down the action, for as long as you hold down the trigger key(s). If you choose 'Pressed again', pressing your trigger key(s) once will be sufficient to start holding down the action. To stop the key map, you will need to press the trigger key(s) a second time. Using 'Hold down' and 'Repeat' together \u00b6 You can use turn on both of these settings to unlock an additional setting. A repeating hold down action behaves like a normal 'Repeat' action in that the action repeats itself with a given frequency. It also behaves like a 'Hold down' action in that each individual action will be held for a certain amount of time in each cycle. Hold down duration (ms) This allows you to set how long the action is held down for before repeating. Special options \u00b6 For extra key map customisation, tap the 'Constraints and more' tab at the top of the screen when editing or creating a key map. Trigger by Intent For information about Trigger by Intent go to this page. Vibrate Vibrate duration (ms) Tapping 'Vibrate' will cause your device to vibrate whenever your key map is triggered (and therefore behaves similarly to the toast message ) Adding constraints \u00b6 You can add special constraints to your key maps in order to customise when they are allowed to run. To add a constraint fron the 'Constraints and more' tab, tap 'Add constraint'. You can choose from the following options: Choosing 'App in foreground' will allow you to restrict your key map to working only if your app of choice is the actively selected window, i.e. on screen and being interacted with. 'App not in foreground' will likewise restrict your key map to working only if your app of choice isn't in focus. Choosing 'Bluetooth device is connected/disconnected' can restrict your key map to working only if a specific bluetooth device is connected/disconnected. If you have root permission , you can restrict your key maps to work only when the screen is on or off. Choosing 'Orientation' can restrict your key map to working only when the device is set to specific screen orientation. Make sure to save your key map after applying these changes. Managing key maps \u00b6 To save your key map and return to the home screen, tap the save icon in the bottom right of the screen. Now your key map should already be working. To pause/unpause all of your key maps, pull down the notification tray and tap the Key Mapper notification to toggle between Paused and Running. On the Key Mapper home screen, tap the 3 bar menu to open the Key Mapper general settings. You will see the following options. Here you can pause/unpause/enable/disable all of your key maps at once. You can also back up and restore key maps here. Learn more about back up and restore. Tapping 'Show input method picker' allows for switching between a Key Mapper compatible keyboard and any other. Key Mapper can also remap fingerprint gestures on many devices. You can learn how to do this here. Go to top.","title":"Quick Start Guide"},{"location":"quick-start/#first-time-setup","text":"When you open Key Mapper, you will be presented with this screen. This screen is referred to as the Key Mapper home screen. Tapping the FIX button next to the accessibility service prompt will allow you to grant Key Mapper permission to run its accessibility service. You must do this for the app to work at all. You can then tap Key Mapper in your list of available services. There may be many others on this screen and your interface may be slightly different. If nothing happens when you tap FIX, or if you can't enable the service, see this page or ask for help in the Discord server. Tapping the FIX button next to the input method prompt will allow you to enable a Key Mapper compatible keyboard. If you want to perform actions like pressing keyboard keys or entering text you must enable this. If you have only installed the Key Mapper app, your list of available keyboards will contain \"Key Mapper Basic Input Method\" only. If you aim to use a physical keyboard (not on-screen) when using Key Mapper, this will be suitable for you. If you want an on-screen keyboard to be available while using Key Mapper, you need to install \"Key Mapper GUI Keyboard\". It is available on the Google Play Store , F-Droid and GitHub. If you are using a Huawei or Xiaomi branded device, a device with 2GB of RAM or less, or intend to use the app while playing a mobile game, it is especially important to follow the next step. Tapping the FIX button next to the battery optimisation prompt will allow you to turn off features of your device that may prevent Key Mapper's essential services from running in the background. This is usually the source of the common 'Key Mapper randomly stops working' issue. Older devices (such as my Android 5 device pictured here) do not have this prompt in Key Mapper. However, I was still able to find the setting in my device settings app. Read more below for details. The screen that opens after tapping FIX may vary depending on your device. In my case, to disable optimisation I found the app(s) in the list, tapped them to open their settings, and chose 'Don't optimise' and on the second device, 'Disabled'. There is an excellent guide at dontkillmyapp.com that explains how to disable battery and/or memory optimisation for your specific device. If Key Mapper randomly stops working even after you complete these steps, ask for help in the Discord server. If you want to remap volume buttons and use them when Do Not Disturb is enabled, you should grant Key Mapper permission to do so. If you have an older device, you may not have this as an option. Tapping FIX will allow you to grant the permission. Find Key Mapper in the list and tap it in order to choose 'Allowed'. Most people can ignore the final prompt. If you want to create an action to change input method, you need to grant an additional set of permissions called WRITE_SECURE_SETTINGS. For help with this click here.","title":"First time setup"},{"location":"quick-start/#creating-a-key-map","text":"A key map is an association between a user input (such as pushing a key or button) and a response from the device (sending information about what key was pressed and for how long). In Key Mapper, 'user inputs' that are recognised by the app are called 'triggers'. The responses from your device that were due to a trigger being pressed are called 'actions'. Key Mapper lets you assign actions to triggers that may be different from their default use. A 'volume up' trigger normally increases the volume when pressed, but this app can change that to something else. This guide deals with 'Key event' triggers. If you want to remap fingerprint gestures, check out this guide.","title":"Creating a key map"},{"location":"quick-start/#setting-the-triggers","text":"To create your first key map, tap the + icon at the bottom of the Key Mapper home screen. You will see one of the two menus below. In either case, the first step is to record a trigger. Tap the red 'Record trigger' button and then press the physical button that you want to change the function of. In this guide I will demonstrate with 'volume down'. Key Mapper can also create a key map with multiple triggers. If you want to use more than one trigger for one key map, you can press the buttons in the order you will press them to execute the key map. For example, if you wanted to map 'Ctrl' + 'H' to show the device home menu, you should press 'Ctrl' and then 'H'. Key Mapper can also remap fingerprint gestures on many devices. You can learn how to do this here.","title":"Setting the trigger(s)"},{"location":"quick-start/#setting-the-actions","text":"Next, it's time to choose an action. If you have a high-resolution display, you will see the ADD ACTION button at the bottom of the screen (pictured left). Otherwise, tap the ACTIONS tab at the top of the screen (pictured right). Tap the ADD ACTION button at the bottom of this screen. The action selection screen will open. Here you can choose from a wide variety of actions. Swipe left and right to change category, and scroll up and down the list until you find the action you want to add. Below is a table of the different kinds of actions you can choose from in each tab. Tab Description App Choose an app to open when you press your trigger. App shortcut Choose an app operation (such as sharing location, checking local traffic, sending a text message) Keycode Emulate a keyboard key press (such as an alphanumeric character or multimedia key) System Choose a system operation (such as toggling Bluetooth, opening the home menu, toggling flashlight) Key An alternative way to choose a key press action, by pressing the key that you want to map to. Tap screen Emulate a screen tap at a specific location on your screen. Key event Emulate a key press from a specifc connected device. Text Emulate typing a string. Intent See this page. Phone call Call a telephone number. Network and carrier rates will apply. Unsupported actions A list of actions that your device won't allow you to use. Android frequently changes what users are allowed to do between versions. For this simple demonstration I will choose KEYCODE_E from the Keycode tab. This action will emulate pressing an E key on a keyboard. Key Mapper can also create a key map with multiple actions. If you want to add more actions to execute in series you can do so by tapping ADD ACTION again and choosing the next action in the chain. In the next section you can specify a delay between those actions if you wish.","title":"Setting the action(s)"},{"location":"quick-start/#customising-a-key-map","text":"You may wish to customise your triggers and actions to have specific behaviours. Most people will want to do at least some customisation.","title":"Customising a key map"},{"location":"quick-start/#trigger-settings","text":"Starting with the triggers, tap the 3 dot menu to the right of the trigger's name to bring up the following menu. You can choose from four different settings. Turning on \"Do not override default action\" will mean that Key Mapper will not replace the normal operation of your trigger, instead it will execute the key map as well as the default operation. One trigger can have three different click types. Choose from short press, long press and double press. Read more.","title":"Trigger settings"},{"location":"quick-start/#action-settings","text":"Next, tap the 3 stacked dots to the right of the action's name to bring up the following menu. Here you can customise a lot of the operation of your key map, including timing, multipliers and debug messages. Show a toast message when performing When this is turned on, the following notice will come up at the bottom of the screen when ever your trigger is pressed. You can have your device vibrate instead of an on-screen message if you want. The setting is found here. The following details refer to action timing settings. Delay before next action (ms) This option takes effect if you have multiple actions in your key map. The slider sets the amount of time between this action and the next. Action count This option serves as a multiplier. If action count is equal to 1, when your key map is triggered, your action will be performed once. If it is equal to 5, the action will be performed 5 times, etc.","title":"Action settings"},{"location":"quick-start/#repeating-actions","text":"Repeat When this is turned on, Key Mapper will execute your actions repeatedly. This is particularly useful when emulating a keyboard key press, where in most applications holding down the key would result in a repeating output. The default settings in Key Mapper are designed to emulate that behaviour when 'Repeat' is turned on. Repeat every... (ms) This option sets the time period for your repeating action. If this is set to 200, your action will repeat every 200ms, or in terms of frequency, 5 times per second. Some people prefer to think about this setting as a repeat rate, commonly measured in 'clicks' per second or cps. To calculate the appropriate time period for this option from a desired frequency, use this equation: Time period (ms) = 1000 / Frequency ('cps') Delay until repeat... (ms) This option sets the amount of time between the first action and the second action (or the first repeat). This is part of the keyboard key behaviour simulation. If you want your repeating action to begin straight away, you can make this 0. Stop repeating when trigger is... Released Pressed again This option allows you to choose from 2 simple behaviours. If you choose 'Released', you will need to hold down the trigger key(s) in order to have the key map execute. If you let go of the key(s), the key map will stop. If you choose 'Pressed again', pressing your trigger key(s) once will be sufficient to start your repeating key map. To stop the key map, you will need to press the trigger key(s) a second time.","title":"Repeating actions"},{"location":"quick-start/#hold-down-actions","text":"Hold down This setting provides the ability to simulate holding down a key. With this turned on (and repeat turned off), the default behaviour is that holding down your trigger will translate to holding down the action, for as long as you hold down the trigger. Hold down until trigger is... Released Pressed again This setting allows you to choose from two behaviours. If 'Released' is selected, holding down your trigger key(s) will translate to holding down the action, for as long as you hold down the trigger key(s). If you choose 'Pressed again', pressing your trigger key(s) once will be sufficient to start holding down the action. To stop the key map, you will need to press the trigger key(s) a second time.","title":"Hold down actions"},{"location":"quick-start/#using-hold-down-and-repeat-together","text":"You can use turn on both of these settings to unlock an additional setting. A repeating hold down action behaves like a normal 'Repeat' action in that the action repeats itself with a given frequency. It also behaves like a 'Hold down' action in that each individual action will be held for a certain amount of time in each cycle. Hold down duration (ms) This allows you to set how long the action is held down for before repeating.","title":"Using 'Hold down' and 'Repeat' together"},{"location":"quick-start/#special-options","text":"For extra key map customisation, tap the 'Constraints and more' tab at the top of the screen when editing or creating a key map. Trigger by Intent For information about Trigger by Intent go to this page. Vibrate Vibrate duration (ms) Tapping 'Vibrate' will cause your device to vibrate whenever your key map is triggered (and therefore behaves similarly to the toast message )","title":"Special options"},{"location":"quick-start/#adding-constraints","text":"You can add special constraints to your key maps in order to customise when they are allowed to run. To add a constraint fron the 'Constraints and more' tab, tap 'Add constraint'. You can choose from the following options: Choosing 'App in foreground' will allow you to restrict your key map to working only if your app of choice is the actively selected window, i.e. on screen and being interacted with. 'App not in foreground' will likewise restrict your key map to working only if your app of choice isn't in focus. Choosing 'Bluetooth device is connected/disconnected' can restrict your key map to working only if a specific bluetooth device is connected/disconnected. If you have root permission , you can restrict your key maps to work only when the screen is on or off. Choosing 'Orientation' can restrict your key map to working only when the device is set to specific screen orientation. Make sure to save your key map after applying these changes.","title":"Adding constraints"},{"location":"quick-start/#managing-key-maps","text":"To save your key map and return to the home screen, tap the save icon in the bottom right of the screen. Now your key map should already be working. To pause/unpause all of your key maps, pull down the notification tray and tap the Key Mapper notification to toggle between Paused and Running. On the Key Mapper home screen, tap the 3 bar menu to open the Key Mapper general settings. You will see the following options. Here you can pause/unpause/enable/disable all of your key maps at once. You can also back up and restore key maps here. Learn more about back up and restore. Tapping 'Show input method picker' allows for switching between a Key Mapper compatible keyboard and any other. Key Mapper can also remap fingerprint gestures on many devices. You can learn how to do this here. Go to top.","title":"Managing key maps"},{"location":"user-guide/actions/","text":"Intent (2.3.0+) \u00b6","title":"Actions"},{"location":"user-guide/actions/#intent-230","text":"","title":"Intent (2.3.0+)"},{"location":"user-guide/adb-permissions/","text":"If your device is rooted , Key Mapper can grant itself these permissions by enabling the \"Key Mapper has root permissions\" toggle in the settings. If your device is not rooted you must do the following. Prepare ADB (Android Debug Bridge) \u00b6 Enable developer options on your device by going to device Settings -> About Phone and tapping Build Number many times until it says you've enabled developer options. The location of the Build Number may vary between devices. Enable USB Debugging in developer options and plug your device into your PC. Download the Android SDK platform tools from here and unzip it. Open a terminal/command prompt in the unzipped folder. Type or paste in a terminal: adb devices and your device should show up in the list after you click the prompt on your phone to allow USB debugging from your PC. WRITE_SECURE_SETTINGS \u00b6 If you need more features of Key Mapper, you may grant the app permission to modify the secure settings on your device. Type or paste in a terminal: adb shell pm grant io.github.sds100.keymapper android.permission.WRITE_SECURE_SETTINGS For CI builds the package name is io.github.sds100.keymapper.ci . More features which rely on this set of permission will come in the future. These permissions persist across reboots but need to be granted again if the app is reinstalled. Enabling the Accessibility Service \u00b6 You may wish to enable Key Mapper's accessibility service using ADB if you cannot do so in-app due to manufacturer constraints. To add Key Mapper to the List of the enabled accessibility providers, type or paste in a terminal: adb shell settings put secure ENABLED_ACCESSIBILITY_SERVICES io.github.sds100.keymapper/io.github.sds100.keymapper.service.MyAccessibilityService","title":"ADB Permissions"},{"location":"user-guide/adb-permissions/#prepare-adb-android-debug-bridge","text":"Enable developer options on your device by going to device Settings -> About Phone and tapping Build Number many times until it says you've enabled developer options. The location of the Build Number may vary between devices. Enable USB Debugging in developer options and plug your device into your PC. Download the Android SDK platform tools from here and unzip it. Open a terminal/command prompt in the unzipped folder. Type or paste in a terminal: adb devices and your device should show up in the list after you click the prompt on your phone to allow USB debugging from your PC.","title":"Prepare ADB (Android Debug Bridge)"},{"location":"user-guide/adb-permissions/#write_secure_settings","text":"If you need more features of Key Mapper, you may grant the app permission to modify the secure settings on your device. Type or paste in a terminal: adb shell pm grant io.github.sds100.keymapper android.permission.WRITE_SECURE_SETTINGS For CI builds the package name is io.github.sds100.keymapper.ci . More features which rely on this set of permission will come in the future. These permissions persist across reboots but need to be granted again if the app is reinstalled.","title":"WRITE_SECURE_SETTINGS"},{"location":"user-guide/adb-permissions/#enabling-the-accessibility-service","text":"You may wish to enable Key Mapper's accessibility service using ADB if you cannot do so in-app due to manufacturer constraints. To add Key Mapper to the List of the enabled accessibility providers, type or paste in a terminal: adb shell settings put secure ENABLED_ACCESSIBILITY_SERVICES io.github.sds100.keymapper/io.github.sds100.keymapper.service.MyAccessibilityService","title":"Enabling the Accessibility Service"},{"location":"user-guide/backup-restore/","text":"You can create and restore backups of any of your key maps in Key Mapper. Automatically back up key maps \u00b6 You can ask Key Mapper to make backups of your in-app in the Key Mapper Settings menu. To open the Key Mapper Settings, tap the 3 bar menu. You will see the following options. Tap 'Settings'. On this page you can find and change more advanced settings and set preferences. Tap 'Automatically back up key maps to a specified location'. Your file manager will then ask you to choose a folder to save your key maps. Manual back up \u00b6 On the Key Mapper home screen, press and hold on a key map. You can then select the key maps you wish to back up. Tap the 3 dot menu in the bottom left. Choose 'back up'. Your file manager will then ask you to choose a folder to save your key maps. Restore key maps \u00b6 To restore key maps, tap the 3 bar menu. You will see the following options. Tap 'Restore'. Your file manager will then ask you to choose a JSON file containing key map information.","title":"Back up and Restore (2.1.0+, Android 4.4+)"},{"location":"user-guide/backup-restore/#automatically-back-up-key-maps","text":"You can ask Key Mapper to make backups of your in-app in the Key Mapper Settings menu. To open the Key Mapper Settings, tap the 3 bar menu. You will see the following options. Tap 'Settings'. On this page you can find and change more advanced settings and set preferences. Tap 'Automatically back up key maps to a specified location'. Your file manager will then ask you to choose a folder to save your key maps.","title":"Automatically back up key maps"},{"location":"user-guide/backup-restore/#manual-back-up","text":"On the Key Mapper home screen, press and hold on a key map. You can then select the key maps you wish to back up. Tap the 3 dot menu in the bottom left. Choose 'back up'. Your file manager will then ask you to choose a folder to save your key maps.","title":"Manual back up"},{"location":"user-guide/backup-restore/#restore-key-maps","text":"To restore key maps, tap the 3 bar menu. You will see the following options. Tap 'Restore'. Your file manager will then ask you to choose a JSON file containing key map information.","title":"Restore key maps"},{"location":"user-guide/constraints/","text":"Screen is on/off (ROOT) \u00b6 Only allow the key map to be triggered when the screen is on/off. This is only supported by buttons which can be detected when the screen is off. Here is a list of these buttons.","title":"Constraints"},{"location":"user-guide/constraints/#screen-is-onoff-root","text":"Only allow the key map to be triggered when the screen is on/off. This is only supported by buttons which can be detected when the screen is off. Here is a list of these buttons.","title":"Screen is on/off (ROOT)"},{"location":"user-guide/fingerprint-gestures/","text":"This page aims to explain how to remap fingerprint gestures. For specific troubleshooting, consult the FAQ. Where screenshots are necessary, this guide uses two devices to demonstrate. OnePlus 7 Pro, Android 10, Dark theme, 1440p, tiny font size Samsung J3 6, Android 5, Light theme, 720p, medium font size App interface pictured: keymapper-2.3.0-alpha-ci.778 This guide is updated to match current stable release UI. Report inaccuracies. Disclaimer \u00b6 On some devices, the fingerprint sensor can be remapped by Key Mapper. There are generally 3 categories of devices with varying degrees of support for this feature: Some devices have a fingerprint sensor that can detect directional gestures (up, down, left, right swipes) and your device allows third party apps such as Key Mapper to access and remap these. Some devices have a fingerprint sensor that can detect directional gestures (up, down, left, right swipes) but your device does not allow Key Mapper to access them. Some devices have a fingerprint sensor that is not capable of detecting directional gestures. This generally includes in-screen fingerprint sensors. If your device falls into categories 2 or 3, you cannot remap fingerprint gestures, and you shouldn't continue with this guide. Even if your device allows for directional fingerprint gestures for system use, they may not allow third party apps such as Key Mapper to access them and therefore there is nothing the developer of Key Mapper can do to help you. If your device supports remapping directional fingerprint gestures, this guide is for you. Remapping fingerprint gestures \u00b6 From the Key Mapper home screen, tab the 'Fingerprint' tab. Here you can set actions for the 4 directional gestures. Tapping any one of them will bring you to the action assignment screen for that gesture and by tapping 'Add action' at the bottom of the screen you can assign the action. Click here for an explanation of all the actions you can choose from. After choosing an action (or actions) you can press the save icon in the bottom right to save the mapping. Customising fingerprint gesture maps \u00b6 If you would like to further customise the gesture map, you can tap the 3 dot menu to the right of the action and open the 'action settings'. On this screen you can choose from the following options: Hold down until swiped again This option allows for keycode actions to be 'held', much like you could hold down a physical keyboard key. The action will continue until the same gesture is performed a second time. Delay before next action (ms) This option takes effect if you have multiple actions in your gesture map. The slider sets the amount of time between this action and the next. Action count This option serves as a multiplier. If action count is equal to 1, when your gesture map is triggered, your action will be performed once. If it is equal to 5, the action will be performed 5 times, etc. Repeat until swiped again When this is turned on, Key Mapper will execute your actions repeatedly. This is particularly useful when emulating a keyboard key press, where in most applications holding down the key would result in a repeating output. Repeat every... (ms) This option sets the time period for your repeating action. If this is set to 200, your action will repeat every 200ms, or in terms of frequency, 5 times per second. Some people prefer to think about this setting as a repeat rate, commonly measured in 'clicks' per second or cps. To calculate the appropriate time period for this option from a desired frequency, use this equation: Time period (ms) = 1000 / Frequency ('cps') Tap 'Save' to close the menu, preserving changes. Special options \u00b6 For extra customisation, tap the 'Constraints and more' tab at the top of the screen when editing or creating a gesture map. Vibrate Vibrate duration (ms) Tapping 'Vibrate' will cause your device to vibrate whenever your gesture map is triggered. Adding constraints \u00b6 You can add special constraints to your gestures maps in order to customise when they are allowed to run. To add a constraint fron the 'Constraints and more' tab, tap 'Add constraint'. You can choose from the following options: Choosing 'App in foreground' will allow you to restrict your gesture map to working only if your app of choice is the actively selected window, i.e. on screen and being interacted with. 'App not in foreground' will likewise restrict your gesture map to working only if your app of choice isn't in focus. Choosing 'Bluetooth device is connected/disconnected' can restrict your gesture map to working only if a specific bluetooth device is connected/disconnected. If you have root permission , you can restrict your gesture maps to work only when the screen is on or off. Choosing 'Orientation' can restrict your gesture map to working only when the device is set to specific screen orientation. Make sure to save your gesture map after applying these changes.","title":"Fingerprint Gestures (2.2.0+, Android 8.0+)"},{"location":"user-guide/fingerprint-gestures/#disclaimer","text":"On some devices, the fingerprint sensor can be remapped by Key Mapper. There are generally 3 categories of devices with varying degrees of support for this feature: Some devices have a fingerprint sensor that can detect directional gestures (up, down, left, right swipes) and your device allows third party apps such as Key Mapper to access and remap these. Some devices have a fingerprint sensor that can detect directional gestures (up, down, left, right swipes) but your device does not allow Key Mapper to access them. Some devices have a fingerprint sensor that is not capable of detecting directional gestures. This generally includes in-screen fingerprint sensors. If your device falls into categories 2 or 3, you cannot remap fingerprint gestures, and you shouldn't continue with this guide. Even if your device allows for directional fingerprint gestures for system use, they may not allow third party apps such as Key Mapper to access them and therefore there is nothing the developer of Key Mapper can do to help you. If your device supports remapping directional fingerprint gestures, this guide is for you.","title":"Disclaimer"},{"location":"user-guide/fingerprint-gestures/#remapping-fingerprint-gestures","text":"From the Key Mapper home screen, tab the 'Fingerprint' tab. Here you can set actions for the 4 directional gestures. Tapping any one of them will bring you to the action assignment screen for that gesture and by tapping 'Add action' at the bottom of the screen you can assign the action. Click here for an explanation of all the actions you can choose from. After choosing an action (or actions) you can press the save icon in the bottom right to save the mapping.","title":"Remapping fingerprint gestures"},{"location":"user-guide/fingerprint-gestures/#customising-fingerprint-gesture-maps","text":"If you would like to further customise the gesture map, you can tap the 3 dot menu to the right of the action and open the 'action settings'. On this screen you can choose from the following options: Hold down until swiped again This option allows for keycode actions to be 'held', much like you could hold down a physical keyboard key. The action will continue until the same gesture is performed a second time. Delay before next action (ms) This option takes effect if you have multiple actions in your gesture map. The slider sets the amount of time between this action and the next. Action count This option serves as a multiplier. If action count is equal to 1, when your gesture map is triggered, your action will be performed once. If it is equal to 5, the action will be performed 5 times, etc. Repeat until swiped again When this is turned on, Key Mapper will execute your actions repeatedly. This is particularly useful when emulating a keyboard key press, where in most applications holding down the key would result in a repeating output. Repeat every... (ms) This option sets the time period for your repeating action. If this is set to 200, your action will repeat every 200ms, or in terms of frequency, 5 times per second. Some people prefer to think about this setting as a repeat rate, commonly measured in 'clicks' per second or cps. To calculate the appropriate time period for this option from a desired frequency, use this equation: Time period (ms) = 1000 / Frequency ('cps') Tap 'Save' to close the menu, preserving changes.","title":"Customising fingerprint gesture maps"},{"location":"user-guide/fingerprint-gestures/#special-options","text":"For extra customisation, tap the 'Constraints and more' tab at the top of the screen when editing or creating a gesture map. Vibrate Vibrate duration (ms) Tapping 'Vibrate' will cause your device to vibrate whenever your gesture map is triggered.","title":"Special options"},{"location":"user-guide/fingerprint-gestures/#adding-constraints","text":"You can add special constraints to your gestures maps in order to customise when they are allowed to run. To add a constraint fron the 'Constraints and more' tab, tap 'Add constraint'. You can choose from the following options: Choosing 'App in foreground' will allow you to restrict your gesture map to working only if your app of choice is the actively selected window, i.e. on screen and being interacted with. 'App not in foreground' will likewise restrict your gesture map to working only if your app of choice isn't in focus. Choosing 'Bluetooth device is connected/disconnected' can restrict your gesture map to working only if a specific bluetooth device is connected/disconnected. If you have root permission , you can restrict your gesture maps to work only when the screen is on or off. Choosing 'Orientation' can restrict your gesture map to working only when the device is set to specific screen orientation. Make sure to save your gesture map after applying these changes.","title":"Adding constraints"},{"location":"user-guide/triggers/","text":"Options \u00b6 There are options for each trigger key by pressing the 3-dots on them. There are also more options for the whole trigger under the \"options\" tab. Here are explanations of each option. Trigger by Intent (2.3.0+) \u00b6 This allows you to trigger the key map by sending an Intent to Key Mapper. There are many apps that can automate broadcasting Intents such as Tasker and Automate. Intent action \u00b6 io.github.sds100.keymapper.TRIGGER_KEYMAP_BY_UID Intent string extra \u00b6 io.github.sds100.keymapper.KEYMAP_UID and the value is the UUID of the key map. You can copy the UUID in Key Mapper by turning on the \"Trigger by Intent\" option. Intent package (optional but recommended) \u00b6 io.github.sds100.keymapper This will only send the Intent to Key Mapper and no other packages. Important!!! Add .debug or .ci to the end of all io.github.sds100.keymapper instances in the action, extra and package if your Key Mapper build is a debug or ci build respectively. Detect Trigger When Screen is Off (ROOT, 2.0.0+) \u00b6 These are the buttons which can be detected when the screen is off. Let the developer know about any keys you would also like to be supported. Volume Up Volume Down Headset button","title":"Triggers"},{"location":"user-guide/triggers/#options","text":"There are options for each trigger key by pressing the 3-dots on them. There are also more options for the whole trigger under the \"options\" tab. Here are explanations of each option.","title":"Options"},{"location":"user-guide/triggers/#trigger-by-intent-230","text":"This allows you to trigger the key map by sending an Intent to Key Mapper. There are many apps that can automate broadcasting Intents such as Tasker and Automate.","title":"Trigger by Intent (2.3.0+)"},{"location":"user-guide/triggers/#intent-action","text":"io.github.sds100.keymapper.TRIGGER_KEYMAP_BY_UID","title":"Intent action"},{"location":"user-guide/triggers/#intent-string-extra","text":"io.github.sds100.keymapper.KEYMAP_UID and the value is the UUID of the key map. You can copy the UUID in Key Mapper by turning on the \"Trigger by Intent\" option.","title":"Intent string extra"},{"location":"user-guide/triggers/#intent-package-optional-but-recommended","text":"io.github.sds100.keymapper This will only send the Intent to Key Mapper and no other packages. Important!!! Add .debug or .ci to the end of all io.github.sds100.keymapper instances in the action, extra and package if your Key Mapper build is a debug or ci build respectively.","title":"Intent package (optional but recommended)"},{"location":"user-guide/triggers/#detect-trigger-when-screen-is-off-root-200","text":"These are the buttons which can be detected when the screen is off. Let the developer know about any keys you would also like to be supported. Volume Up Volume Down Headset button","title":"Detect Trigger When Screen is Off (ROOT, 2.0.0+)"}]}